{"version":3,"sources":["Button.js","Navbar.js","Lightsaber.js","Card.js","Person.js","Planet.js","Film.js","Specie.js","Vehicle.js","Starship.js","PopulateList.js","App.js","serviceWorker.js","index.js"],"names":["Button","props","id","label","onButtonClick","react_default","a","createElement","className","onClick","Navbar","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","event","category","target","innerHTML","toLowerCase","changeCategory","state","items","_this2","fetch","then","response","json","data","setState","entries","_this3","ButtonList","map","item","i","src_Button_0","key","capitalize","Component","Lightsaber","Card","children","Person","_this$props$data","name","height","mass","src_Card_0","lib_default","showLoadingAnimation","type","rows","ready","React","Planet","diameter","climate","gravity","Film","title","episode_id","release_date","director","producer","Specie","classification","designation","average_height","Vehicle","model","manufacturer","cost_in_credits","passengers","Starship","starship_class","PopulateList","urlNext","url","replace","fetchData","urlPrev","dataSet","results","next","previous","prevProps","nextProps","nextState","length","populatedArray","src_Person","src_Planet","src_Film","src_Specie","src_Vehicle","src_Starship","buttons","push","App","src_Navbar","src_Lightsaber_0","src_PopulateList","style","clear","href","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.42caf096.chunk.js","sourcesContent":["import React from 'react';\r\nimport  './Button.css';\r\n\r\nconst Button = (props) => {\r\n\r\n\tconst { id, label, onButtonClick} = props;\r\n\treturn (\r\n\r\n\t\t<button id={id} className='f4 grow no-underline br-pill ph5 pv2 mb2 dib hover-bg-blue w-15 tc black bg-white mr2' onClick={onButtonClick}>{label}</button>\r\n\r\n\t);\r\n\r\n\r\n}\r\n\r\nexport default Button;","import React, {Component} from 'react';\r\nimport Button from \"./Button\";\r\nimport {capitalize} from 'lodash';\r\n// import items from 'Navbar-items';\r\n\r\n\r\nclass Navbar extends Component {\r\n\r\n\tconstructor(props)\r\n\t{\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\titems: []\r\n\t\t}\r\n\t}\r\n\r\n\tonButtonClick = (event) =>\r\n\t{\r\n\t \t\tconst category = event.target.innerHTML.toLowerCase();\r\n\t\t\tthis.props.changeCategory(category);\t \t\r\n\t}\r\n\r\n\r\n\tcomponentDidMount() \r\n\t{\r\n\t\tfetch('https://swapi.co/api/')\r\n\t\t.then(response => response.json())\r\n\t\t.then((data) => {\r\n\t\t\tthis.setState({items: Object.entries(data)});\r\n\t\t});\r\n\r\n\t}\r\n\r\n\r\n\trender(){\r\n\r\n\t\tconst {items} = this.state;\r\n\t\tconst ButtonList = items.map((item,i) => {\r\n\t\t\treturn <Button key={i} label={capitalize(items[i][0])} onButtonClick={this.onButtonClick} />\r\n\t\t});\r\n\r\n\r\n\t\treturn (\r\n\r\n\t\t\t<div className = 'flex flex-wrap justify-center'>\r\n\t\t\t\t{ButtonList}\r\n\t\t\t</div>\r\n\r\n\r\n\t\t);\r\n\r\n\t}\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport './Lightsaber.css'\r\n\r\nconst Lightsaber = () => {\r\n\r\n\treturn (\r\n\t\t<div id=\"lightsaber\" className=\"dib ml3 mr5\">\r\n\t\t\t\t\t<span id=\"light\"></span>\r\n\t\t\t\t\t<span id=\"generator\">\r\n\t\t\t\t\t\t<span id=\"guard\">\r\n\t\t\t\t\t\t\t<span></span>\r\n\t\t\t\t\t\t\t<span></span>\r\n\t\t\t\t\t\t\t<span></span>\r\n\t\t\t\t\t\t\t<span></span>\r\n\t\t\t\t\t\t\t<span></span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span id=\"handlestart\">\r\n\t\t\t\t\t\t\t<span></span>\r\n\t\t\t\t\t\t\t<span></span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span id=\"handle\">\r\n\t\t\t\t\t\t\t<span></span>\r\n\t\t\t\t\t\t\t<span></span>\r\n\t\t\t\t\t\t\t<span></span><span></span>\r\n\t\t\t\t\t\t\t<span></span><span></span>\r\n\t\t\t\t\t\t\t<span></span><span></span>\r\n\t\t\t\t\t\t\t<span></span><span></span>\r\n\t\t\t\t\t\t\t<span></span><span></span>\r\n\t\t\t\t\t\t\t<span></span><span></span>\r\n\t\t\t\t\t\t\t<span></span><span></span>\r\n\t\t\t\t\t\t\t<span></span><span></span>\r\n\t\t\t\t\t\t\t<span className=\"long\"></span>\r\n\t\t\t\t\t\t\t<span className=\"long\"></span>\r\n\t\t\t\t\t\t\t<span className=\"box\"></span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span className=\"wings\">\r\n\t\t\t\t\t\t\t<span className=\"wing wing1\"></span>\r\n\t\t\t\t\t\t\t<span className=\"wing wing2\"></span>\r\n\t\t\t\t\t\t\t<span className=\"wing wing3\"></span>\r\n\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t<span className=\"light\"></span>\r\n\t\t\t\t\t</span>\r\n\t\t</div>\r\n\r\n\t);\r\n\r\n}\r\n\r\nexport default Lightsaber;","import React from 'react';\r\nimport './Card.css';\r\n\r\nconst Card = (props) => {\r\n\r\n\treturn (\r\n\r\n\t\t<div className=\"card dib grow br2 pa3 ma2 shadow-5 bw2\">\r\n\t\t\t{props.children}\r\n\r\n\t\t</div>\r\n\r\n\t);\r\n\r\n\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport ReactPlaceholder from 'react-placeholder';\r\nimport Card from './Card';\r\n\r\nclass Person extends React.Component{\r\n\r\n\r\n\trender()\r\n\t{\r\n\t\t\tconst {name, height, mass} = this.props.data;\r\n\t\t\treturn (\r\n\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<ReactPlaceholder showLoadingAnimation type='text' rows={3} ready={this.props.ready}>\t\t\t\t  \r\n\t\t\t\t\t    \t\r\n\t\t\t\t\t\t<h2 className='f3 pv2'>{name}</h2>\r\n\t\t\t\t\t\t<p className='f5 pv1'>Height: {height}</p>\r\n\t\t\t\t\t\t<p className='f5 pv1'>Mass: {mass}</p>\r\n\r\n\t\t\t\t\t</ReactPlaceholder>\r\n\t\t\t\t</Card>\r\n\r\n\r\n\t\t);\r\n\r\n\t}\r\n\t\r\n}\r\n\r\nexport default Person;","import React from 'react';\r\nimport Card from './Card';\r\nimport ReactPlaceholder from 'react-placeholder';\r\n\r\n\r\nclass Planet extends React.Component{\r\n\r\n\r\n\trender()\r\n\t{\r\n\t\t\tconst {name, diameter, climate, gravity} = this.props.data;\r\n\t\t\treturn (\r\n\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<ReactPlaceholder showLoadingAnimation type='text' rows={4} ready={this.props.ready}>\t\t\t\t  \r\n\t\t\t\t\t    \t\r\n\t\t\t\t\t\t<h2 className='f3 pv2'>{name}</h2>\r\n\t\t\t\t\t\t<p className='f5 pv1'>Diameter: {diameter}</p>\r\n\t\t\t\t\t\t<p className='f5 pv1'>Climate: {climate}</p>\r\n\t\t\t\t\t\t<p className='f5 pv1'>Gravity: {gravity}</p>\r\n\r\n\r\n\t\t\t\t\t</ReactPlaceholder>\r\n\t\t\t\t</Card>\r\n\r\n\r\n\t\t);\r\n\r\n\t}\r\n\t\r\n}\r\n\r\nexport default Planet;\r\n","import React from 'react';\r\nimport Card from './Card';\r\nimport ReactPlaceholder from 'react-placeholder';\r\n\r\n\r\nclass Film extends React.Component{\r\n\r\n\r\n\trender()\r\n\t{\r\n\t\t\tconst {title, episode_id, release_date, director, producer} = this.props.data;\r\n\t\t\treturn (\r\n\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<ReactPlaceholder showLoadingAnimation type='text' rows={5} ready={this.props.ready}>\t\t\t\t  \r\n\t\t\t\t\t    \t\r\n\t\t\t\t\t\t<h2 className='f3 pv2'>{title}</h2>\r\n\t\t\t\t\t\t<p className='f5 pv1'>Episode: {episode_id}</p>\r\n\t\t\t\t\t\t<p className='f5 pv1'>Release Date: {release_date}</p>\r\n\t\t\t\t\t\t<p className='f5 pv1'>Director: {director}</p>\r\n\t\t\t\t\t\t<p className='f5 pv1'>Producer: {producer}</p>\r\n\r\n\r\n\r\n\t\t\t\t\t</ReactPlaceholder>\r\n\t\t\t\t</Card>\r\n\r\n\r\n\t\t);\r\n\r\n\t}\r\n\t\r\n}\r\n\r\nexport default Film;\r\n","import React from 'react';\r\nimport ReactPlaceholder from 'react-placeholder';\r\nimport Card from './Card';\r\n\r\nclass Specie extends React.Component{\r\n\r\n\r\n\trender()\r\n\t{\r\n\t\t\tconst {name, classification, designation, average_height} = this.props.data;\r\n\t\t\treturn (\r\n\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<ReactPlaceholder showLoadingAnimation type='text' rows={4} ready={this.props.ready}>\t\t\t\t  \r\n\t\t\t\t\t    \t\r\n\t\t\t\t\t\t<h2 className='f3 pv2'>{name}</h2>\r\n\t\t\t\t\t\t<p className='f5 pv1'>Classification: {classification}</p>\r\n\t\t\t\t\t\t<p className='f5 pv1'>Designation: {designation}</p>\r\n\t\t\t\t\t\t<p className='f5 pv1'>Average Height: {average_height}</p>\r\n\r\n\t\t\t\t\t</ReactPlaceholder>\r\n\t\t\t\t</Card>\r\n\r\n\r\n\t\t);\r\n\r\n\t}\r\n\t\r\n}\r\n\r\nexport default Specie;","import React from 'react';\r\nimport ReactPlaceholder from 'react-placeholder';\r\nimport Card from './Card';\r\n\r\nclass Vehicle extends React.Component{\r\n\r\n\r\n\trender()\r\n\t{\r\n\t\t\tconst {name, model, manufacturer, cost_in_credits, passengers} = this.props.data;\r\n\t\t\treturn (\r\n\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<ReactPlaceholder showLoadingAnimation type='text' rows={5} ready={this.props.ready}>\t\t\t\t  \r\n\t\t\t\t\t    \t\r\n\t\t\t\t\t\t<h2 className='f3 pv2'>{name}</h2>\r\n\t\t\t\t\t\t<p className='f5 pv1'>Model: {model}</p>\r\n\t\t\t\t\t\t<p className='f5 pv1'>Manufacturer: {manufacturer}</p>\r\n\t\t\t\t\t\t<p className='f5 pv1'>Cost in Credits: {cost_in_credits}</p>\r\n\t\t\t\t\t\t<p className='f5 pv1'>Passengers: {passengers}</p>\r\n\r\n\t\t\t\t\t</ReactPlaceholder>\r\n\t\t\t\t</Card>\r\n\r\n\r\n\t\t);\r\n\r\n\t}\r\n\t\r\n}\r\n\r\nexport default Vehicle;","import React from 'react';\r\nimport ReactPlaceholder from 'react-placeholder';\r\nimport Card from './Card';\r\n\r\nclass Starship extends React.Component{\r\n\r\n\r\n\trender()\r\n\t{\r\n\t\t\tconst {name, model, manufacturer, cost_in_credits, passengers, starship_class} = this.props.data;\r\n\t\t\treturn (\r\n\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<ReactPlaceholder showLoadingAnimation type='text' rows={3} ready={this.props.ready}>\t\t\t\t  \r\n\t\t\t\t\t    \t\r\n\t\t\t\t\t\t<h2 className='f3 pv2'>{name}</h2>\r\n\t\t\t\t\t\t<p className='f5 pv1'>Model: {model}</p>\r\n\t\t\t\t\t\t<p className='f5 pv1'>Starship Class: {starship_class}</p>\r\n\t\t\t\t\t\t<p className='f5 pv1'>Manufacturer: {manufacturer}</p>\r\n\t\t\t\t\t\t<p className='f5 pv1'>Cost in Credits: {cost_in_credits}</p>\r\n\t\t\t\t\t\t<p className='f5 pv1'>Passengers: {passengers}</p>\r\n\r\n\t\t\t\t\t</ReactPlaceholder>\r\n\t\t\t\t</Card>\r\n\r\n\r\n\t\t);\r\n\r\n\t}\r\n\t\r\n}\r\n\r\nexport default Starship;","import React from 'react';\r\nimport Person from './Person';\r\nimport Planet from './Planet';\r\nimport Film from './Film.js';\r\nimport Specie from './Specie';\r\nimport Vehicle from './Vehicle';\r\nimport Starship from './Starship';\r\nimport Card from './Card';\r\nimport Button from './Button';\r\n\r\n\r\n\r\n\r\nclass PopulateList extends React.Component {\r\n\r\n\tconstructor(props)\r\n\t{\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tdataSet: [],\r\n\t\t\turlNext: '',\r\n\t\t\turlPrev: '',\r\n\t\t\tready: false\r\n\t\t}\r\n\t}\r\n\r\n\tonButtonClick = (event) => {\r\n\r\n\t\tif(event.target.id === 'btnNext' && this.state.urlNext != null)\r\n\t\t{\r\n\t\t\tconst url = this.state.urlNext.replace('https://swapi.co/api/','')\r\n\t\t\tthis.setState({ready: false});\r\n\t\t\tthis.fetchData(url);\r\n\t\t}\r\n\r\n\t\tif(event.target.id === 'btnPrev' && this.state.urlPrev != null)\r\n\t\t{\r\n\t\t\tconst url = this.state.urlPrev.replace('https://swapi.co/api/','')\r\n\t\t\tthis.setState({ready: false});\r\n\t\t\tthis.fetchData(url);\r\n\t\t}\r\n\t\t\r\n\r\n\t}\r\n\r\n\r\n\tfetchData = (url) => {\r\n\r\n\t\tif(url !== 'default')\r\n\t\t{\r\n\t\t\tfetch('https://swapi.co/api/' + url)\r\n\t\t\t\t\t  \t .then(response => response.json())\r\n\t\t\t\t\t  \t .then(data => {\r\n\t\t\t\t\t  \t \t\r\n\t\t\t\t\t  \t \tthis.setState({dataSet: data.results, urlNext:data.next, urlPrev:data.previous, ready: true});\r\n\t\t\t\t\t  \t \t});\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tcomponentDidMount()\r\n\t{\r\n  \t\tthis.fetchData(this.props.category);\t\t\r\n  \t}\r\n\r\n  \tcomponentDidUpdate(prevProps)\r\n  \t{\r\n  \t\tif(prevProps.category !== this.props.category)\r\n  \t\t{\r\n  \t\t\tthis.fetchData(this.props.category);\r\n  \t\t}\r\n  \t}\r\n\r\n  \tshouldComponentUpdate(nextProps, nextState)\r\n  \t{\r\n  \t\tif(this.props.category !== nextProps.category)\r\n  \t\t{\r\n  \t\t\tthis.setState({ready: false});\r\n  \t\t\treturn true;\r\n  \t\t}\r\n\r\n  \t\tif(this.state.dataSet !== nextState.dataSet)\r\n  \t\t{\r\n  \t\t\treturn true;\r\n  \t\t}\r\n\r\n  \t\tif(this.state.ready !== nextState.ready)\r\n  \t\t{\r\n  \t\t\treturn true;\r\n  \t\t}\r\n\r\n  \t\treturn false;\r\n\r\n  \t}\r\n\r\n\r\n\trender()\r\n\t{\r\n\t\tif(this.props.category === 'default')\r\n\t\t{\r\n\t\t\treturn (\r\n\r\n\t\t\t\t<div className=\"tc mt6\">\r\n\t\t\t\t\t<h1 className=\"lh-title f1 measure white ttu\"> May the Force be with You! </h1>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tconst {dataSet} = this.state;\r\n\r\n\t\t\tif(!dataSet.length)\r\n\t\t\t{\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className='flex justify-center'>\r\n\t\t\t\t\t    <Card>\r\n\t\t\t\t\t    \t\t\t\t  \r\n\t\t\t\t\t     \t\t<h2>Data Loading...</h2>\r\n\t\t\t\t\t    \t\r\n\t\t\t\t    \t</Card>\r\n\t\t\t\t    </div>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\r\n\t\t\t\tlet populatedArray = [];\r\n\t\t\t\t\r\n\t\t\t\t\tswitch(this.props.category)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcase 'people':\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tpopulatedArray = dataSet.map( (data,i) => {\r\n\r\n\t\t\t\t\t\t\t\treturn <Person key={i} data={data} ready={this.state.ready}/>\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t  \t\tbreak;\r\n\t\t\t\t\t  \t}\r\n\r\n\t\t\t\t\t  \tcase 'planets':\r\n\t\t\t\t\t  \t{\r\n\t\t\t\t\t        populatedArray = dataSet.map( (data,i) => {\r\n\r\n\t\t\t\t\t\t\t\treturn <Planet key={i} data={data} ready={this.state.ready}/>\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t  \t\tbreak;\r\n\t\t\t\t\t  \t}\r\n\r\n\t\t\t\t\t  \tcase 'films':\r\n\t\t\t\t\t  \t{\r\n\t\t\t\t\t\t\tpopulatedArray = dataSet.map( (data,i) => {\r\n\r\n\t\t\t\t\t\t\t\treturn <Film key={i} data={data} ready={this.state.ready}/>\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t  \t\tbreak;\r\n\t\t\t\t\t  \t}\r\n\r\n\t\t\t\t\t  \tcase 'species':\r\n\t\t\t\t\t  \t{\r\n\t\t\t\t\t\t\tpopulatedArray = dataSet.map( (data,i) => {\r\n\r\n\t\t\t\t\t\t\t\treturn <Specie key={i} data={data} ready={this.state.ready}/>\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t  \t\tbreak;\r\n\t\t\t\t\t  \t}\r\n\r\n\t\t\t\t\t  \tcase 'vehicles':\r\n\t\t\t\t\t  \t{\r\n\t\t\t\t\t\t\tpopulatedArray = dataSet.map( (data,i) => {\r\n\r\n\t\t\t\t\t\t\t\treturn <Vehicle key={i} data={data} ready={this.state.ready}/>\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t  \t\tbreak;\r\n\t\t\t\t\t  \t}\r\n\r\n\t\t\t\t\t  \tcase 'starships':\r\n\t\t\t\t\t  \t{\r\n\t\t\t\t\t\t\tpopulatedArray = dataSet.map( (data,i) => {\r\n\r\n\t\t\t\t\t\t\t\treturn <Starship key={i} data={data} ready={this.state.ready}/>\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t  \t\tbreak;\r\n\t\t\t\t\t  \t}\r\n\r\n\t\t\t\t\t  \tdefault:\r\n\t\t\t\t\t  \t{\r\n\t\t\t\t\t  \t\tbreak;\r\n\t\t\t\t\t  \t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet buttons = [];\r\n\r\n\t\t\t\tif(this.state.urlPrev !== null)\r\n\t\t\t\t{\r\n\t\t\t\t\tbuttons.push(<Button key={1} id='btnPrev' label='Prev' onButtonClick={this.onButtonClick}/>);\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tif(this.state.urlNext !== null)\r\n\t\t\t\t{\r\n\t\t\t\t\tbuttons.push(<Button key={0} id='btnNext' label='Next' onButtonClick={this.onButtonClick}/>);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className=\"flex flex-column justify-center\">\r\n\t\t\t\t\t\t<div className='flex items-start flex-wrap justify-center'>\r\n\t\t\t\t\t\t\t{populatedArray}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='center'>\r\n\t\t\t\t\t\t\t{buttons}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t}\t\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\r\n}\r\n\r\nexport default PopulateList;","import React, { Component } from 'react';\r\n// import logo from './logo.svg';\r\nimport './App.css';\r\nimport Navbar from './Navbar';\r\nimport Lightsaber from './Lightsaber';\r\nimport PopulateList from './PopulateList';\r\nimport \"react-placeholder/lib/reactPlaceholder.css\";\r\n\r\n\r\nclass App extends Component {\r\n\r\n\r\n  constructor()\r\n  {\r\n  \t\tsuper();\r\n  \t\tthis.state = {\r\n  \t\t\tcategory: 'default'\r\n  \t\t}\r\n\r\n  }\r\n\r\n\r\n  changeCategory = (category) =>\r\n  {\r\n  \t\t\r\n\t\tthis.setState({category: category});\t\t\t\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n      <div className=''>\r\n        <h1 className='f1 tc ttu white'>Star Wars Universe</h1>\r\n        <Navbar changeCategory={this.changeCategory}/>\r\n        <div className='fl'>\r\n        \t<Lightsaber />\r\n        </div>\r\n\r\n        <div className='mr3'>\r\n        \t<PopulateList category={this.state.category}/>\r\n        </div>\r\n\r\n        <div className='tc yellow ma3 pa3 bg-dark-gray br2' style={{clear: 'both'}}>\r\n          <p> Made by <a className='white' href='https://kishan00747.github.io'>kishan00747</a>. All rights reserved. </p>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'tachyons';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}